#!/usr/bin/env bash

set -euo pipefail

function download {
  FILE="${1##*/}"
  FILEDIR="$(pwd)"
  rmapi -ni geta "$1" 1>/dev/null 2>&1 || echo -n

  if [ -f "${FILE}.zip" ]
  then
    TMPDIR="$(mktemp -d)"
    cd "$TMPDIR"
    unzip "$FILEDIR/${FILE}.zip"
    rm "$FILEDIR/${FILE}.zip"
    if [ "$(echo -n *.pdf)" != "*.pdf" ]
    then
      mv *.pdf "$FILEDIR/${FILE}.pdf"
    fi
    if [ "$(echo -n *.epub)" != "*.epub" ]
    then
      mv *.epub "$FILEDIR/${FILE}.epub"
    fi
    cd "$FILEDIR"
    rm -rf "$TMPDIR"
    if ! [ -f "${FILE}.epub" -o -f "${FILE}.pdf" ]
    then
      echo "Could not find an epub or pdf"
      exit 1
    fi
  elif ! [ -f "${FILE}-annotations.pdf" ]
  then
    echo "Could not find annotated pdf or a zip file"
    exit 1
  fi
}

function cmd_take {
  rmapi -ni ls|grep '^\[f\]'|cut -c 5-|while read FILE
  do
    if [ "$FILE" = "Quick sheets" ]
    then
      continue
    fi
    echo "Downloading $FILE"
    download "$FILE" || exit 1
    rmapi -ni rm "$FILE" 1>/dev/null 2>&1 || exit 1
  done
}

function cmd_send {
  SOURCE="$1"
  if [ "$#" = "1" ]
  then
    DESTINATION="/"
  else
    DESTINATION="$2"
  fi
  if [ -d "$SOURCE" ]
  then
    cd "$SOURCE"
    echo rmapi -ni mput "$DESTINATION"
    rmapi -ni mput "$DESTINATION"
  else
    echo rmapi -ni put "$SOURCE" "$DESTINATION"
    rmapi -ni put "$SOURCE" "$DESTINATION"
  fi
}

function cmd_rm {
  rmapi -ni rm "$1"
}

function cmd_mkdir {
  rmapi -ni mkdir "$1"
}

function cmd_receive {
  FILE="$1"
  echo "receiving $FILE"
  download "$FILE" || exit 1
}

function cmd_receivezip {
  FILE="$1"
  echo "receiving $FILE"
  rmapi -ni get "$1" 1>/dev/null 2>&1
}

function cmd_list {
  if [ "$#" = "1" ]
  then
    DIR="$1"
  else
    DIR="/"
  fi
  echo "listing $DIR"
  rmapi -ni ls "$DIR"
}

if [ "$#" = "0" ]
then
  echo "Please specify a command, one of: send, take, list, mkdir, rm, receive, receivezip"
  exit 1
fi
if [ "$1" != "send" -a "$1" != "take" -a "$1" != "list" -a "$1" != "mkdir" -a "$1" != "rm" -a "$1" != "receive" -a "$1" != "receivezip" ]
then
  echo "No such command "$1""
  exit 1
fi

CMD="$1"
shift
cmd_$CMD "$@"
