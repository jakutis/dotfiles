#!/usr/bin/env bash

if [ "$(id -u)" != "0" ]
then
  ARGS="$@"
  if [ -t 1 ]
  then
      SUDO="sudo"
  else
      SUDO="gksudo"
  fi
  $SUDO -- bash -c "XDG_CONFIG_HOME="$XDG_CONFIG_HOME" XDG_DATA_HOME="$XDG_DATA_HOME" XAUTHORITY="$HOME/.Xauthority" HOME="$HOME" "$0" $ARGS"
  exit
fi

CMD="$1"

function help {
    echo "Available commands: help hibernate poweroff reboot net powersave screens brightness"
}

if [ -z "$CMD" ]
then
    echo "Error: no command given" 1>&2
    help 1>&2
    exit 1
fi

DOTFILES="$(cat "$XDG_CONFIG_HOME/dotfiles/dotfiles")"
VARIA="$(cat "$XDG_CONFIG_HOME/dotfiles/varia")"
MACHINE="$(cat "$XDG_CONFIG_HOME/dotfiles/machine")"

case "$CMD" in
    "brightness")
        DIR="$XDG_CONFIG_HOME/dotfiles/brightness"
        ARG="$2"

        if ! [ -d "$DIR" ]
        then
            echo "Symlink $DIR does not exist, please create it, e.g. ln -s /sys/devices/pci0000:00/0000:00:02.0/backlight/acpi_video0 \"$DIR\"" 1>&2
            exit 1
        fi
        CURRENT="$(cat "$DIR/brightness")"
        MAX="$(cat "$DIR/max_brightness")"
        MIN="0"
        RANGE=$(($MAX - $MIN))
        STEP=$(($RANGE / 20))

        if [ "$ARG" = "" ]
        then
            echo "$CURRENT"
        elif [ "$ARG" = "save" ]
        then
            echo "$CURRENT" > "$XDG_DATA_HOME/dotfiles/lastbrightness"
        elif [ "$ARG" = "saved" ]
        then
            cat "$XDG_DATA_HOME/dotfiles/lastbrightness" > "$DIR/brightness"
        elif [ "$ARG" = "more" ]
        then
            echo $(($CURRENT + $STEP)) > "$DIR/brightness"
        elif [ "$ARG" = "less" ]
        then
            echo $(($CURRENT - $STEP)) > "$DIR/brightness"
        elif [ "$ARG" = "max" ]
        then
            echo "$MAX" > "$DIR/brightness"
        elif [ "$ARG" = "min" ]
        then
            echo "$MIN" > "$DIR/brightness"
        else
            echo $ARG > "$DIR/brightness"
        fi
        ;;
    "screens")
        "$DOTFILES/screens.$MACHINE/$2"
        ;;
    "net")
        "$VARIA/$MACHINE/rc.power"
        "$VARIA/$MACHINE/rc.local.start"
        "$VARIA/$MACHINE/rc.local.modem.stop"
        "$VARIA/$MACHINE/rc.local.wifi.stop"
        nohup "$VARIA/networks/cfg-${2}" 1>/dev/null 2>&1 &
        ;;
    "powersave")
        $VARIA/networks/vanilla.sh
        $VARIA/laptop/rc.power
        $VARIA/laptop/rc.local.stop
        $VARIA/laptop/rc.local.modem.stop
        $VARIA/laptop/rc.local.wifi.stop
        rm -f "$LAST"
        ;;
    "reboot" | "restart")
        $VARIA/laptop/rc.local.stop
        $VARIA/laptop/rc.local.modem.stop
        $VARIA/laptop/rc.local.wifi.stop
        rm -f "$LAST"
        if which systemctl >/dev/null
        then
            systemctl reboot
        else
            reboot
        fi
        ;;
    "poweroff" | "shutdown")
        $VARIA/laptop/rc.local.stop
        $VARIA/laptop/rc.local.modem.stop
        $VARIA/laptop/rc.local.wifi.stop
        rm -f "$LAST"
        if which systemctl >/dev/null
        then
            systemctl poweroff
        else
            poweroff
        fi
        ;;
    "suspend")
        $HOME/bin/switch-display LVDS1
        $VARIA/laptop/rc.local.stop
        $VARIA/laptop/rc.local.modem.stop
        $VARIA/laptop/rc.local.wifi.stop
        rm -f "$LAST"
        if which systemctl >/dev/null
        then
            systemctl suspend
        else
            pm-suspend
        fi
        xrandr --auto
        $HOME/bin/update-xinput
        $VARIA/laptop/rc.power
        ;;
    "hibernate")
        $HOME/bin/switch-display LVDS1
        $VARIA/laptop/rc.local.stop
        $VARIA/laptop/rc.local.modem.stop
        $VARIA/laptop/rc.local.wifi.stop
        rm -f "$LAST"
        if which systemctl >/dev/null
        then
            systemctl hibernate
        else
            pm-hibernate
        fi
        xrandr --auto
        $HOME/bin/update-xinput
        $VARIA/laptop/rc.power
        ;;
    "help")
        help
        ;;
    *)
        echo "Error: unknown command given" 1>&2
        help 1>&2
        exit 1
        ;;
esac
