#!/usr/bin/env bash

if [ "$(id -u)" != "0" ]
then
    echo cannot continue as a non-root user
    exit 1
fi

set -o verbose
set -o xtrace

if [ -z "$1" ]
then
  echo "Please provide main username as the first argument"
  exit 1
fi
MAIN_USER="$1"
MAIN_HOME="$(eval echo ~$MAIN_USER)"
XDG_CONFIG_HOME="$MAIN_HOME/.config"

PACMAN="$(which pacman 2>/dev/null)"
APTGET="$(which apt-get 2>/dev/null)"
DNF="$(which dnf 2>/dev/null)"

if [ -n "$PACMAN" ]
then
    "$PACMAN" --sync --needed gnu-netcat socat psmisc git vim kdebase-konqueror kdegraphics-okular mplayer vlc ffmpeg openssh cups octave coreutils powertop libxslt wavpack lame flac bchunk mp3splt cuetools python2-eyed3 id3lib mp3info faac mac libmp4v2 samba ethtool mercurial texlive-most parted kdegraphics-ksnapshot smartmontools htop dstat dnsmasq protobuf zlib libutempter pkg-config openssl ncurses curl sqlite libxml2 stfl json-c gettext bzip2 markdown pcre libyaml elinks openvpn bridge-utils fetchmail postfix unzip gmp mesa freeglut hdparm parted qt libcups poppler-qt ebtables lsb-release alsa-utils mc smbclient autoconf libsigc++ yajl ntp ethtool wol duplicity ntfs-3g ntfsprogs cmus gramps ejabberd mcabber irssi p7zip imagemagick zip sshfs perl-image-exiftool loudmouth librsvg lftp flex bison intltool python2-cheetah python2-pyopenssl par2cmdline rygel yasm xorg-xclock xorg-xinput xdotool libspectre tidyhtml astyle ack wget vicious virtualbox virtualbox-guest-iso osmo mariadb gksu ebtables dhclient wpa_supplicant beep xbindkeys zenity wmname cmake bzr subversion wvdial sage-mathematics gimp libreoffice sane skype-call-recorder ifuse python2-lxml wireless_tools patch pkgfile automake libtool dosfstools vpnc tmux pwgen gsasl dos2unix ghc gtkmm poppler-glib python2 tcpdump audacity recoll pstotext antiword catdoc unrtf mutagen python2-pychm aspell-en xchm xclip wireshark-gtk couchdb iw sysstat pinentry scons gstreamer0.10-ugly-plugins gstreamer0.10-good-plugins gstreamer0.10-base-plugins gstreamer0.10-bad-plugins dnsutils thttpd gnuplot libcue calibre libmpcdec gawk gdbm ctags cscope python-scipy python2-scipy gcc-multilib gcc-fortran xorg-xinit make pulseaudio pavucontrol clang iotop nload lame usbutils joystick dia inkscape xchm asciidoc docbook2x rtmpdump pv cabextract lm_sensors tinyxml libid3tag ccd2iso kdebase-workspace rsync poppler-qt5 re2c skype mailman ocaml camlp4 zeromq multitail minidlna meld traceroute tree gdb libupnp graphviz apr apr-util serf libsasl unrar autocutsel jdk7-openjdk cppunit rtorrent qemu cpuburn xcompmgr libusb libnotify emacs || exit 1

    if ! "$PACMAN" --query --list package-query 1>/dev/null 2>&1
    then
        DIR="$( mktemp --directory )"
        cd "$DIR"
        wget https://aur.archlinux.org/packages/pa/package-query/PKGBUILD
        makepkg --asroot
        pacman --upgrade *.pkg.tar.xz
        cd -
        rm --recursive "$DIR"
    fi

    if ! "$PACMAN" -Ql yaourt 1>/dev/null 2>&1
    then
        DIR="$( mktemp --directory )"
        cd "$DIR"
        wget https://aur.archlinux.org/packages/ya/yaourt/PKGBUILD
        makepkg --asroot
        pacman --upgrade *.pkg.tar.xz
        cd -
        rm --recursive "$DIR"
    fi

    for PKG in rar ttf-ms-fonts transmission-cli ttf2eot python2-yenc pdfgrep v4l2loopback-dkms-git python-autopep8 ideviceinstaller-git ocrodjvu pdftk teamviewer virtualbox-ext-oracle jbig2enc-git proftpd haproxy darcs jmtpfs
    do
        if ! "$PACMAN" --query --list "$PKG" 1>/dev/null 2>&1
        then
            su -s /bin/bash -c "yaourt --sync --noconfirm $PKG" nobody || exit 1
        fi
    done
elif [ -n "$APTGET" ]
then
    dpkg --add-architecture i386 || exit 1
    "$APTGET" install -y lsb-release apt-transport-https wget gnupg || exit 1

    if [ -z "$(grep virtualbox /etc/apt/sources.list)" ]
    then
        wget --quiet --output-document=- https://www.virtualbox.org/download/oracle_vbox.asc | apt-key add - || exit 1
        wget --quiet --output-document=- https://www.virtualbox.org/download/oracle_vbox_2016.asc | apt-key add - || exit 1
        echo "deb [arch=$(dpkg --print-architecture)] http://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib" >> /etc/apt/sources.list
    fi
    if [ -z "$(grep docker /etc/apt/sources.list)" ]
    then
        wget --quiet --output-document=- https://download.docker.com/linux/debian/gpg | apt-key add - || exit 1
        echo "deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/$(lsb_release -s -i|tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable" >> /etc/apt/sources.list
    fi

    "$APTGET" update && "$APTGET" upgrade -y || exit 1
    "$APTGET" install -y flameshot aptitude libreoffice arandr gcc nethogs xdm nautilus git sudo pulseaudio jq libevent-dev libncurses5-dev libssl-dev bison libgdbm-dev libffi-dev libsqlite3-dev libyaml-dev sqlite3 libreadline-dev libplist-dev i3 firefox xinput libdjvulibre-dev parcellite libplist++-dev clang libusb-1.0-0-dev libfuse-dev xbindkeys fzf vlc pavucontrol lm-sensors blueman xautolock polkit-kde-agent-1 meld gnumeric vokoscreen ffmpeg gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly xcompmgr virtualbox-guest-additions-iso virtualbox-qt pwgen feh viewnior guvcview alsa-utils pv oathtool okular pdftk tree docker-ce-cli docker-ce whois detox ncal exfat-utils exfat-fuse p7zip-full zip || exit 1
    "$APTGET" build-dep --assume-yes vim || exit 1

    if [ "$(dpkg-query --show --showformat '${Version}' zoom)" != "$(curl https://zoom.us/client/latest/zoom_amd64.deb -I|grep -Fi location:|sed -e 's/^.*prod\/\(.*\)\/.*$/\1/')" ]
    then
      wget https://zoom.us/client/latest/zoom_$(dpkg --print-architecture).deb && dpkg -i zoom_$(dpkg --print-architecture).deb && rm zoom_$(dpkg --print-architecture).deb && "$APTGET" install -f -y || exit 1
    fi

    DEVDOCSV="$(curl https://api.github.com/repos/egoist/devdocs-desktop/releases/latest|jq --raw-output .name|cut -b 2-)"
    if ! dpkg -l devdocs 1>/dev/null 2>&1 || [ "$(dpkg -s devdocs | grep '^Version:'|cut -b 10-)" != "$DEVDOCSV" ]
    then
      wget "https://github.com/egoist/devdocs-app/releases/download/v${DEVDOCSV}/DevDocs_${DEVDOCSV}_$(dpkg --print-architecture).deb" && dpkg -i "DevDocs_${DEVDOCSV}_$(dpkg --print-architecture).deb" && rm "DevDocs_${DEVDOCSV}_$(dpkg --print-architecture).deb" || exit 1
    fi
elif [ -n "$DNF" ]
then
    systemctl disable gdm
    dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
    dnf update
    dnf install ruby hostapd macchanger iw ripgrep tidy libproxy-devel vpnc-script flatpak flatpak-builder make ostree uuid vlc libva-intel-driver unar ifuse rsync libimobiledevice-utils tree dolphin davfs2 wpa_supplicant pciutils net-tools dhcp-client bless geany mplayer oathtool tig calibre jq git xorg-x11-server-Xorg firefox automake osmo texinfo gcc gcc-c++ okular python konqueror libreoffice claws-mail gstreamer-plugins-bad-free-extras gstreamer-plugins-good-extras kmplayer gstreamer1-vaapi xcompmgr llvm tmux libtool-ltdl-devel mercurial pavucontrol libyaml-devel readline-devel zlib-devel libffi-devel openssl-devel libtool bison sqlite-devel subversion gcc-gfortran bzr sshfs flac-devel pulseaudio-libs-devel xbindkeys parcellite cmake mc libxml2-devel ack meld ocaml dstat gmp-devel redhat-rpm-config ocaml-ocamldoc ocaml-camlp4 ocaml-camlp4-devel ocaml-cryptokit fuse-devel libXaw-devel giflib-devel protobuf-devel intltool libuv-devel libzip-devel systemd-devel stfl-devel loudmouth-devel librsvg2-devel bsdtar libusb-devel docker apr-devel apr-util-devel libserf-devel nasm libvorbis-devel kernel-devel tinyxml-devel libupnp-devel qt-devel qtwebkit-devel libmcrypt-devel libtidy-devel libxslt-devel re2c xsel mongodb gimp p7zip htop octave ntpdate pv transmission-cli libnatpmp scons SDL-devel openal-soft-devel wine powertop inkscape-view kdesu pwgen texlive-pdfcrop-bin djvulibre ImageMagick-devel audacity asciidoc texlive-pdfjam bchunk libmpg123-devel wavpack-devel neon-devel libcue-devel libsndfile-devel fluidsynth-devel libmodplug-devel libsidplayfp-devel libcdio-paranoia-devel iotop libusbmuxd-devel libplist-devel xchm wget system-switch-displaymanager pulseaudio pulseaudio-utils pulseaudio-module-x11 konsole vokoscreen libcgroup-tools dos2unix dwdiff nmap byacc lsof || exit 1
    dnf build-dep R || exit 1
else
    echo "Unknown package manager, only pacman and apt-get are supported"
    exit 1
fi

ln -nsf /usr/share/zoneinfo/Europe/Vilnius /etc/localtime
gpasswd -a "$MAIN_USER" sudo
gpasswd -a "$MAIN_USER" docker

echo "setting up configs"

MACHINE="$(cat "$XDG_CONFIG_HOME/dotfiles/machine")"
if [ -z "$MACHINE" ]
then
    echo "Please create a file "$XDG_CONFIG_HOME/dotfiles/machine" that contains the name of the current machine" 1>&2
    exit 1
fi

echo "MACHINE=$MACHINE"

DOTFILES="$(cat "$XDG_CONFIG_HOME/dotfiles/dotfiles")"
if [ -z "$DOTFILES" ]
then
    echo "Please create a file "$XDG_CONFIG_HOME/dotfiles/dotfiles" that contains path to the dotfiles directory" 1>&2
    exit 1
fi

ln -nsf "$DOTFILES/modprobe.conf" "/etc/modprobe.d/jakutis.conf" || exit 1
ln -nsf "$DOTFILES/rc.local" "/etc/rc.local" || exit 1
echo 'ACTION=="add", SUBSYSTEM=="block", RUN+="'$MAIN_HOME'/bin/udevmount"' > "/etc/udev/rules.d/10-jakutis.rules" || exit 1
echo 'ACTION=="change", SUBSYSTEM=="drm", RUN+="'$MAIN_HOME'/bin/on_drm_change"' >> "/etc/udev/rules.d/10-jakutis.rules" || exit 1
ln -nsf "$DOTFILES/sysctl.conf" "/etc/sysctl.d/99-jakutis.conf" || exit 1
ln -nsf "$DOTFILES/bin/scrub-md" "/etc/cron.monthly/scrub-md" || exit 1
"$DOTFILES/bin/disable-services" || exit 1
