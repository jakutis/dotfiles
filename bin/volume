#!/usr/bin/env bash

TYPE="$1"
COMMAND="$2"

CURVOL=$(amixer -c 0 cget name="Master Playback Volume"|grep ": values"|sed 's/  : values=//ig'|sed 's/,.*//ig' 2>/dev/null)
CURVOL_PULSE=$(pacmd dump-volumes|perl -n -e'/Sink (\d+):.*, real = (.*), soft = / && print $2')
MAXVOL=$(amixer -c 0 sget "Master"|grep Limits|sed 's/  Limits: Playback 0 - //ig')
if [ "$TYPE" = "alsa" ]
then
    STEP=$(($MAXVOL / 10))
    if [ "$COMMAND" == "increase" ]
    then
        if [ "$CURVOL" -lt "$MAXVOL" ]
        then
            CURVOL=$(($CURVOL + $STEP))
        fi
    elif [ "$COMMAND" == "decrease" ]
    then
        if [ "$CURVOL" -gt "0" ]
        then
            CURVOL=$(($CURVOL - $STEP))
        fi
    else
        echo "Error: unknown command $COMMAND"
        exit 1
    fi

    amixer -c 0 sset Master $CURVOL
elif [ "$TYPE" = "pulse" ]
then
    if [ "$COMMAND" = "decrease" ]
    then
        pactl set-sink-mute 0 -- 0
        pactl set-sink-volume 0 -- -10%
    elif [ "$COMMAND" = "increase" ]
    then
        pactl set-sink-mute 0 -- 0
        pactl set-sink-volume 0 -- +10%
    else
        echo "Error: unknown command $COMMAND"
        exit 1
    fi
else
    echo "Error: unknown sound system type $TYPE"
    exit 1
fi
CURVOL=$(amixer -c 0 cget name="Master Playback Volume"|grep ": values"|sed 's/  : values=//ig'|sed 's/,.*//ig' 2>/dev/null)
CURVOL_PULSE=$(pacmd dump-volumes|perl -n -e'/Sink (\d+):.*, real = (.*), soft = / && print $2')
awesome-client <<< "myvolumewidget.text='<span color=\"blue\"> $((CURVOL * 100 / $MAXVOL))% (${CURVOL_PULSE}) </span>'"
