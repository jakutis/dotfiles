#!/usr/bin/env bash

function remove {
  echo "$@" | xargs --max-args=1 rm --force --verbose --recursive
}

function is_dir_empty {
  [ "$(ls -am "$1")" = "., .." ] && return 0 || return 1
}

CLEAR="no"
if [ "$1" = "clear" ]
then
  CLEAR="yes"
fi

REMOVE="no"
if [ "$1" = "remove" ]
then
  REMOVE="yes"
fi

IPAD_ROOT="/mnt/ipad"

if [ -n "$(ls --almost-all "$IPAD_ROOT")" ]
then
  echo "Error: ipad has to be unmounted" 1>&2
  exit 1
fi
idevicepair pair || exit 1

mymount ipad || exit 1
BOOKS_IPAD="$IPAD_ROOT/Books/Purchases"
BOOKS_DESKTOP="$HOME/Desktop/sync/ibooks"
if [ "$CLEAR" = "yes" ]
then
  for I in $(seq 2 $#)
  do
    ARG="${!I}"
    ITEM="${ARG#*/}"
    CLASS="${ARG%%/*}"
    if [ "$CLASS" = "ibooks" ]
    then
      if [ -z "$ITEM" ]
      then
        echo " Clear ibooks"
        remove "$IPAD_ROOT/Books"
      else
        echo " Clear ibooks/$ITEM"
        remove "$BOOKS_IPAD/$ITEM"
      fi
    fi
    if [ "$CLASS" = "photos" ]
    then
      if [ -z "$ITEM" ]
      then
        echo " Clear photos"
        remove "$IPAD_ROOT/DCIM" "$IPAD_ROOT/Photos" "$IPAD_ROOT/PhotoData"
      else
        echo " Clear photos/$ITEM"
        remove "$IPAD_ROOT/DCIM/100APPLE/$ITEM"
      fi
    fi
  done
elif [ "$REMOVE" = "yes" ]
then
  for I in $(seq 2 $#)
  do
    ARG="${!I}"
    ITEM="${ARG#*/}"
    CLASS="${ARG%%/*}"
    if [ "$CLASS" = "ibooks" ]
    then
      if [ -z "$ITEM" ]
      then
        echo " Remove ibooks"
        remove "$BOOKS_DESKTOP"
      else
        echo " Remove ibooks/$ITEM"
        remove "$BOOKS_DESKTOP/$ITEM"
      fi
    fi
    if [ "$CLASS" = "photos" ]
    then
      if [ -z "$ITEM" ]
      then
        echo " Remove photos"
        remove "$HOME/Desktop/sync/photos"
      else
        echo " Remove photos/$ITEM"
        remove "$HOME/Desktop/sync/photos/$ITEM"
      fi
    fi
  done
else
  eval "$(pyenv init -)" && pyenv shell 3.5.2
  mkdir --parents "$BOOKS_DESKTOP" || exit 1
  diff <(ls "$BOOKS_DESKTOP" | sort) <(ls "$BOOKS_IPAD" | grep -v Purchases.plist | sort) | grep -e '^<' | cut -b 3- | while read BOOK
  do
    echo "# Copying a book from Desktop to iPad: $BOOK"
    book2pad -d "$IPAD_ROOT" "$BOOKS_DESKTOP/$BOOK" 1>/dev/null || exit 1
  done
  diff <(ls "$BOOKS_DESKTOP" | sort) <(ls "$BOOKS_IPAD" | grep -v Purchases.plist | sort) | grep -e '^>' | cut -b 3- | while read BOOK
  do
    echo "# Copying a book from iPad to Desktop: $BOOK"
    cp "$BOOKS_IPAD/$BOOK" "$BOOKS_DESKTOP/$BOOK"
  done

  mkdir --parents "$HOME/Desktop/sync/photos" || exit 1
  mkdir --parents "$IPAD_ROOT/DCIM/100APPLE" || exit 1
  remove "$IPAD_ROOT/DCIM/.MISC" || exit 1
  echo "# Copying photos from Desktop to iPad"
  rsync --recursive --times --one-file-system --verbose --progress "$HOME/Desktop/sync/photos/" "$IPAD_ROOT/DCIM/100APPLE/"  || exit 1
  echo "# Copying photos from iPad to Desktop"
  rsync --recursive --times --one-file-system --verbose --progress "$IPAD_ROOT/DCIM/100APPLE/" "$HOME/Desktop/sync/photos/"  || exit 1
fi
mymount ipad || exit 1

mymount ipad:com.firecore.infuse.pro
if [ "$?" = "0" ]
then
  if [ "$CLEAR" = "yes" ]
  then
    for I in $(seq 2 $#)
    do
      ARG="${!I}"
      ITEM="${ARG#*/}"
      CLASS="${ARG%%/*}"
      if [ "$CLASS" = "video" ]
      then
        if [ -z "$ITEM" ]
        then
          echo " Clear video"
          remove "$IPAD_ROOT/"*
        else
          echo " Clear video/$ITEM"
          remove "$IPAD_ROOT/$ITEM"
        fi
      fi
    done
  elif [ "$REMOVE" = "yes" ]
  then
    echo NOOP remove videos
  else
    mkdir --parents "$HOME/Desktop/sync/video" || exit 1
    echo "# Copying videos from Desktop to iPad"
    rsync --recursive --times --one-file-system --verbose --progress "$HOME/Desktop/sync/video/" "$IPAD_ROOT/"  || exit 1
    echo "# Copying videos from iPad to Desktop"
    rsync --recursive --times --one-file-system --verbose --progress "$IPAD_ROOT/" "$HOME/Desktop/sync/video/"  || exit 1
    if is_dir_empty "$HOME/Desktop/sync/video/Inbox"
    then
      rm -rf "$HOME/Desktop/sync/video/Inbox"
    fi
  fi
  mymount ipad || exit 1
fi

mymount ipad:com.imoreapps.portablediskwithiap
if [ "$?" = "0" ]
then
  if [ "$CLEAR" = "yes" ]
  then
    for I in $(seq 2 $#)
    do
      ARG="${!I}"
      ITEM="${ARG#*/}"
      CLASS="${ARG%%/*}"
      if [ "$CLASS" = "music" ]
      then
        if [ -z "$ITEM" ]
        then
          echo " Clear music"
          remove "$IPAD_ROOT/music"
        else
          echo " Clear music/$ITEM"
          remove "$IPAD_ROOT/music/$ITEM"
        fi
      fi
      if [ "$CLASS" = "audiobook" ]
      then
        if [ -z "$ITEM" ]
        then
          echo " Clear audiobook"
          remove "$IPAD_ROOT/audiobook"
        else
          echo " Clear audiobook/$ITEM"
          remove "$IPAD_ROOT/audiobook/$ITEM"
        fi
      fi
    done

  elif [ "$REMOVE" = "yes" ]
  then
    for I in $(seq 2 $#)
    do
      ARG="${!I}"
      ITEM="${ARG#*/}"
      CLASS="${ARG%%/*}"
      if [ "$CLASS" = "music" ]
      then
        if [ -z "$ITEM" ]
        then
          echo " Remove music"
          remove "$HOME/Desktop/sync/music"
        else
          echo " Remove music/$ITEM"
          remove "$HOME/Desktop/sync/music/$ITEM"
        fi
      fi
      if [ "$CLASS" = "audiobook" ]
      then
        if [ -z "$ITEM" ]
        then
          echo " Remove audiobook"
          remove "$HOME/Desktop/sync/audiobook"
        else
          echo " Remove audiobook/$ITEM"
          remove "$HOME/Desktop/sync/audiobook/$ITEM"
        fi
      fi
    done
  else
    mkdir --parents "$IPAD_ROOT/audiobook" || exit 1
    mkdir --parents "$IPAD_ROOT/music" || exit 1
    mkdir --parents "$HOME/Desktop/sync/music" || exit 1
    mkdir --parents "$HOME/Desktop/sync/audiobook" || exit 1
    echo "# Copying audiobooks from Desktop to iPad"
    rsync --recursive --times --one-file-system --verbose --progress "$HOME/Desktop/sync/audiobook/" "$IPAD_ROOT/audiobook/" || exit 1
    echo "# Copying audiobooks from iPad to Desktop"
    rsync --recursive --times --one-file-system --verbose --progress "$IPAD_ROOT/audiobook/" "$HOME/Desktop/sync/audiobook/" || exit 1
    echo "# Copying music from Desktop to iPad"
    rsync --recursive --times --one-file-system --verbose --progress "$HOME/Desktop/sync/music/" "$IPAD_ROOT/music/" || exit 1
    echo "# Copying music from iPad to Desktop"
    rsync --recursive --times --one-file-system --verbose --progress "$IPAD_ROOT/music/" "$HOME/Desktop/sync/music/" || exit 1
  fi
  mymount ipad || exit 1
fi

echo OK, synced.
